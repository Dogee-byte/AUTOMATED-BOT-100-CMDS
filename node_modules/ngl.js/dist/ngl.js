"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NGL = void 0;
const axios_1 = __importDefault(require("axios"));
;
class NGL {
    constructor(proxy) {
        this.url = "https://ngl.link/";
        this.xurl = this.url + "/api/submit";
        if (proxy) {
            this.proxy = proxy;
        }
        ;
    }
    sendMessage(username, message) {
        return __awaiter(this, void 0, void 0, function* () {
            const payload = {
                username: username,
                question: message
            };
            const headers = {
                'Content-Type': 'application/json'
            };
            const config = {
                headers
            };
            if (this.proxy) {
                config.proxy = {
                    host: this.proxy.host,
                    port: this.proxy.port,
                    auth: this.proxy.auth
                };
            }
            ;
            try {
                const res = yield axios_1.default.post(this.xurl, payload, config);
                if (res.status === 200) {
                    return res.data;
                }
                else {
                    throw new Error("Failed to send message :(");
                }
            }
            catch (err) {
                throw new Error(err.message);
            }
        });
    }
}
exports.NGL = NGL;
